<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
    "http://www.w3.org/TR/html4/loose.dtd">
<!--last modified on Saturday, October 03, 1998 04:19 PM -->
<HTML><!-- #BeginTemplate "/Templates/pink.dwt" --><!-- DW6 -->
<HEAD>
<!-- #BeginEditable "doctitle" --> 
<TITLE>Title Bar Title</TITLE>
<!-- #EndEditable --> 
<meta http-equiv=content-type content="text/html; charset=UTF-8">
<meta name="Author" content="Mark S. Miller">
<link rel=author rev=made title="Mark S. Miller">
<META NAME="description" CONTENT="E: Cryptographic Capabilities for Distributed Smart Contracting">
<META NAME="keywords" CONTENT="p2p, p2p language, p2p computing, p2p objects, secure p2p, p2p capabilities, object oriented p2p,
  capability-based p2p, Capability Security, Capabilities, Cryptography, Distributed Objects, Distributed
  Language, Distributed Capabilities, Lambda Calculus, Scripting Language, Distributed Language, Persistent
  Language, Persistent Capabilities, Persistent Objects, Java Shell, Capability Shell, Scripting Java, Smart
  Contracting, Agoric E-Commerce, Open Source, Message pipelining, quasi literal, vat, event loop, granovetter diagram ">
<link rel="stylesheet" href="../../../erights.css" type="text/css">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFEEDD" LINK="#0000FF" VLINK="#800080">
<P> 
<TABLE BORDER="0" width="100%">
  <TR VALIGN="TOP"> 
    <TD WIDTH="10%">&nbsp; </TD>
    <TD> <P> 
      <TABLE BORDER="0" WIDTH="100%">
        <TR> 
          <TD ALIGN="LEFT" valign="top"> <table cellpadding="2">
              <tr> 
                <td valign="top" align="left" colspan="3"><a href="../../../index.html"><img src="../../../images/e-lambda.gif" width="32" height="32" border="0" alt="ERights Home"></a> 
                  <!-- #BeginEditable "Path" -->&nbsp;<!-- #EndEditable --></td>
              </tr>
              <tr> 
                <td valign="top" align="right"><!-- #BeginEditable "PrevButton" --><img src="../../../images/prev-gray.gif" width="64" height="32" alt="Prev"><!-- #EndEditable --></td>
                <td valign="bottom" align="left"><!-- #BeginEditable "FirstButton" -->x<!-- #EndEditable --></td>
                <td valign="top" align="left"><!-- #BeginEditable "NextButton" --> 
                  <img src="../../../images/next-gray.gif" width="64" height="32" alt="Next"><!-- #EndEditable --></td>
              </tr>
            </table></TD>
          <TD rowspan="2" ALIGN="RIGHT"> <P ALIGN="RIGHT"><FONT SIZE="7"><!-- #BeginEditable "BigTitle" --><FONT SIZE="7"><B>Big 
              Title</B></FONT><!-- #EndEditable --></FONT> </TD>
        </TR>
        <TR> 
          <TD ALIGN="LEFT" valign="top"><TABLE WIDTH="100%" BORDER="0" dwcopytype="CopyTableColumn">
              <TR> 
                <TD ALIGN="LEFT" valign="top"> 
                  <!-- Google CSE Search Box Begins -->
                  <form id="searchbox_000392378982602007030:4i4vpd1mcjo" action="http://google.com/cse">
                    <input type="hidden" name="cx" value="000392378982602007030:4i4vpd1mcjo" />
                    <input name="q" type="text" size="40" />
                    <input type="submit" name="sa" value="Search" />
                    <input type="hidden" name="cof" value="FORID:1" />
                  </form>
                  <script type="text/javascript" src="http://google.com/coop/cse/brand?form=searchbox_000392378982602007030%3A4i4vpd1mcjo"></script> 
                  <!-- Google CSE Search Box Ends -->
                </TD>
              </TR>
            </TABLE></TD>
        </TR>
      </TABLE>
      <hr>
      <!-- #BeginEditable "LongBody" --> 
      <blockquote>
        <pre align="left">A simple set of application objects, shown first interacting directly:

    ? def c {
    >     to hi(_) { println("hi") }}
    # value: <c>

    ? c.hi(c)
    # stdout: hi
    #

    ? def b {
    >     to foo(c) {
    >         c.hi(c)}}
    # value: <b>

    ? b.foo(c)
    # stdout: hi
    #

    ? def makeA(b,c) {
    >     return def a {
    >         to start() {
    >             b.foo(c)}}}
    # value: <makeA>

    ? def directA := makeA(b,c)
    # value: <a>

    ? directA.start()
    # stdout: hi
    #

The simplified Horton code from the paper, enhanced only to show the
Horton objects of the various parties logging some actions for
responsibility-tracking purposes:

    ? def makeQuoteln := <elang:interp.makeQuoteln>
    # value: <makeQuoteln>

    ? def makeProxy(beMe, whoBlame, stub, reportln) {
    >     def log := makeQuoteln(reportln,
    >                            `I ask ${whoBlame.getBrand()} to:`,
    >                            75)
    >     return def proxy {
    >         to getGuts() {                   # as P2           # 04
    >             return [whoBlame, stub]}                       # 05
    >         match [verb, [p2]] {             # as P1           # 02
    >             log(`$verb/1`)
    >             def [carolWho, s2] := p2.getGuts()             # 03
    >             def gs3 := s2.intro(whoBlame)                  # 06
    >             def p3Desc := ["t", gs3, carolWho]             # 12
    >             stub.deliver(verb, [p3Desc])}}}                # 13
    # value: <makeProxy>

    ? def wrap(s3, bobWho, beCarol) {          # as S2           # 10
    >     def provide(fillBox) {                                 # 22
    >         def fill := beCarol.unseal(fillBox)                # 23
    >         fill(s3)}                                          # 24
    >     return bobWho.seal(provide)}                           # 11
    # value: <wrap>

    ? def unwrap(gs3,carolWho,beBob){          # as S1           # 17
    >     def provide := beBob.unseal(gs3)                       # 18
    >     var s3slot := null                                     # 19
    >     def fill(s3) {s3slot := s3}                            # 25
    >     def fillBox := carolWho.seal(fill)                     # 20
    >     provide(fillBox)                                       # 21
    >     return s3slot}                                         # 26
    # value: <unwrap>

    ? def makeStub(beMe, whoBlame, targ, reportln) {
    >     def log := makeQuoteln(reportln,
    >                            `${whoBlame.getBrand()} asks me to:`,
    >                            75)
    >     return def stub {
    >         to intro(bobWho) {               # as S2           # 07
    >             log(`meet ${bobWho.getBrand()}`)
    >             def s3 := makeStub(beMe,bobWho,targ,reportln)  # 08
    >             return wrap(s3, bobWho, beMe)}                 # 09
    >         to deliver(verb, [p3Desc]) {     # as S1           # 14
    >             log(`$verb/1`)
    >             def [=="t", gs3, carolWho] := p3Desc           # 15
    >             def s3 := unwrap(gs3, carolWho, beMe)          # 16
    >             def p3 := makeProxy(beMe,carolWho,s3,reportln) # 27
    >             E.call(targ, verb, [p3])}}}                    # 28
    # value: <makeStub>

Code to help establish initial Horton connectivity:

    ? def makeBrand := <elib:sealing.makeBrand>

    ? def makePrincipal(label :String) {
    >     def reportln := makeQuoteln(println, `$label said:`, 77)
    >     def [whoMe,beMe] := makeBrand(label)
    >     return def principal {
    >         to __printOn(out :TextWriter) {out.print(label)}
    >         to who() {return whoMe}
    >         to encodeFor(targ, whoBlame) {
    >             def stub := makeStub(beMe, whoBlame, targ, reportln)
    >             return wrap(stub, whoBlame, beMe)}
    >         to decodeFrom(gift, whoBlame) {
    >             def stub := unwrap(gift, whoBlame, beMe)
    >             return makeProxy(beMe, whoBlame, stub, reportln)}}}
    # value: <makePrincipal>

The players:

    ? def alice := makePrincipal("Alice")
    # value: Alice

    ? def bob := makePrincipal("Bob")
    # value: Bob

    ? def carol := makePrincipal("Carol")
    # value: Carol

Initial connectiivity:

    ? def gs1 := bob.encodeFor(b, alice.who())

    ? def gs2 := carol.encodeFor(c, alice.who())

    ? def p1  := alice.decodeFrom(gs1, bob.who())
    ? def p2  := alice.decodeFrom(gs2, carol.who())
    ? def a := makeA(p1,p2)

Here's what Who's sound like:

    ? a.start()
    # stdout: Alice said:
    #         > I ask Bob to:
    #         > > foo/1
    #         Carol said:
    #         > Alice asks me to:
    #         > > meet Bob
    #         Bob said:
    #         > Alice asks me to:
    #         > > foo/1
    #         Bob said:
    #         > I ask Carol to:
    #         > > hi/1
    #         Carol said:
    #         > Bob asks me to:
    #         > > meet Carol
    #         Carol said:
    #         > Bob asks me to:
    #         > > hi/1
    #         hi
    #</pre>
      </blockquote>
      <!-- #EndEditable --></TD>
    <TD WIDTH="10%" rowspan="2" align="right" valign="bottom"> <table cellspacing="6" cellpadding="12">
        <tr> 
          <td><script type="text/javascript"><!--
google_ad_client = "pub-5301282303422208";
google_alternate_color = "FFEEDD";
google_ad_width = 120;
google_ad_height = 600;
google_ad_format = "120x600_as";
google_ad_type = "text_image";
google_ad_channel ="";
google_color_border = "336699";
google_color_bg = "FFFFFF";
google_color_link = "0000FF";
google_color_url = "008000";
google_color_text = "000000";
//--></script> <script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
        </tr>
      </table></TD>
  </TR>
  <TR VALIGN="TOP"> 
    <TD WIDTH="10%">&nbsp;</TD>
    <TD> <hr>
      Unless stated otherwise, all text on this page which is either unattributed 
      or by Mark S. Miller is hereby placed in the public domain. 
      <div align="center"> 
        <table width="100%" cellpadding="4" cellspacing="0">
          <tr> 
            <td> <table align="left" cellpadding="2">
                <tr> 
                  <td valign="top" align="left" colspan="3"><a href="../../../index.html"><img src="../../../images/e-lambda.gif" width="32" height="32" border="0" alt="ERights Home"></a> 
                    <!-- #BeginEditable "Path2" -->&nbsp;<!-- #EndEditable --></td>
                </tr>
                <tr> 
                  <td valign="top" align="right"><!-- #BeginEditable "PrevButton2" --><img src="../../../images/prev-gray.gif" width="64" height="32" alt="Prev"><!-- #EndEditable --></td>
                  <td valign="bottom" align="left"><!-- #BeginEditable "FirstButton2" -->x<!-- #EndEditable --></td>
                  <td valign="top" align="left"><!-- #BeginEditable "NextButton2" --> 
                    <img src="../../../images/next-gray.gif" width="64" height="32" alt="Next"><!-- #EndEditable --></td>
                </tr>
              </table></td>
            <td> <table border="3" align="center" cellpadding="6" cellspacing="3">
                <tr> 
                  <td> <div align="center"><font size="-1"><a href="../../index.html">ELib</a> 
                      &nbsp;&nbsp; <a href="../../../elang/index.html">E Language</a> 
                      &nbsp;&nbsp; <a href="../../../smart-contracts/index.html">Smart 
                      Contracts</a> &nbsp;&nbsp; <a href="../../../related.html">Related</a> 
                      </font></div></td>
                </tr>
                <tr> 
                  <td> <div align="center"><font size="-1"><a href="../../../download/index.html">Download</a> 
                      &nbsp;&nbsp; <a href="http://mumble.net/e/faq.html">FAQ</a> 
                      &nbsp;&nbsp; <a href="../../../javadoc/index.html">API</a> &nbsp;&nbsp; 
                      <a href="http://www.eros-os.org/pipermail/e-lang/">Mail 
                      Archive</a> &nbsp;&nbsp; <a href="../../../donate.html">Donate</a></font></div></td>
                </tr>
              </table></td>
            <td><div align="right"> 
                <p><a href="https://sourceforge.net/tracker/?func=add&amp;group_id=75274&amp;atid=551529"><i>report 
                  bug</i></a> (including <a href="http://validator.w3.org/check/referer">invalid 
                  html</a>) </p>
                <p><a href="http://www.epic.org/crypto/"><img src="../../../images/key.gif" width="37" height="19" alt="Golden Key Campaign" border="0"></a>&nbsp;<a href="http://www.eff.org/br/"><img src="../../../images/ribbon.gif" width="18" height="30"
alt="Blue Ribbon Campaign" border="0"></a></div></td>
          </tr>
          <tr> 
            <td colspan="3"><TABLE WIDTH="100%" BORDER="0" dwcopytype="CopyTableColumn">
        <TR> 
          <TD ALIGN="LEFT" valign="top">
            <!-- Google CSE Search Box Begins -->
            <form id="searchbox_000392378982602007030:4i4vpd1mcjo" action="http://google.com/cse">
              <input type="hidden" name="cx" value="000392378982602007030:4i4vpd1mcjo" />
              <input name="q" type="text" size="40" />
              <input type="submit" name="sa" value="Search" />
              <input type="hidden" name="cof" value="FORID:1" />
            </form>
            <script type="text/javascript" src="http://google.com/coop/cse/brand?form=searchbox_000392378982602007030%3A4i4vpd1mcjo"></script> 
            <!-- Google CSE Search Box Ends -->
          </TD>
          </TR>
      </TABLE></td>
          </tr>
        </table>
      </div></TD>
  </TR>
</TABLE>
</BODY>
<!-- #EndTemplate --></HTML>
